Q: Why was not zero the first address used by the memory image of program _global_?
A: ?

Q: Write a program that defines environment variables for arguments. For example,
after calling the program with options:
% args -ab -d x y z
the following must happen:
echo $opta
yes
echo $optb
yes
echo $optc
yes
echo $args
x y z
A: See file solution2.8_args.c

Q:  What would print /bin/ls /blahblah (given that /blahblah does not
exist).  Would ls /blahblah print the same?  Why?
A: The output would be the same, in this instance /bin is part of the
$path variable, meaning that all rc(1) will look for executable in
these folders before resorting to the current working directory.

Q: What happens when we execute
% cd
after executing this program. Why?
#include <u.h>
#include <libc.h>
void
main(int, char*[])
{
	putenv("home", "/tmp");
	exits(nil);
}

Q: What would these commands do? Why?
% cd /
% cd ..
% pwd
A: The current directory would still be / (or the root directory)

Q: After reading date(1) change the environment variable _timezone_
to display the current time in New Jersey (East coast of US).
A:
% date
.. local time ..
% cp /adm/timezone/US_Eastern /env/timezone
% date
.. US Eastern time ..

Q: How can we know the arguments given to a process that has been
already started?
A: % cat /proc/<pid>/args

Q: Give another answer for the previous problem.
A: % ps -a | grep <pid>

Q: What could we do if we want to debug a broken process tomorrow and
want to power off the machine now?
A: 

Q: What would happen if you use the debugger, acid, to inspect 8.out
after executing the next command? Why?
% strip 8.out
A: Strip removes symbol table segments from executable files.  After
stripping these symbols acid won't be able to debug the program and
quit with the message "no symbol information"
